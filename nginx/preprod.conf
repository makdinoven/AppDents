# ===================== preprod.conf (test.dent-s.com) =====================

# Docker DNS
resolver 127.0.0.11 ipv6=off valid=5s;

# map для WebSocket
map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

server_tokens off;

# upstream-ы из docker-compose (именно имена сервисов)
upstream backend  { server backend:8000;  keepalive 16; }
upstream frontend { server frontend:80;   keepalive 16; }
upstream adminer  { server adminer:8080;  keepalive 4;  }

# gzip (не обяз., но полезно)
gzip on;
gzip_comp_level 5;
gzip_min_length 256;
gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss image/svg+xml;

# --------------------------- HTTP :80 (ACME + редирект) -------------------
server {
    listen 80;
    listen [::]:80;
    server_name test.dent-s.com;
    client_max_body_size 100M;

    # ACME webroot для certbot renew
    location ^~ /.well-known/acme-challenge/ {
        root /var/www/certbot;
        default_type "text/plain";
    }

    return 301 https://$host$request_uri;
}

# --------------------------- HTTPS :443 -----------------------------------
server {
    listen 443 ssl;
    listen [::]:443 ssl http2;
    http2 on;
    server_name test.dent-s.com;
    client_max_body_size 100M;

    types {
        application/javascript mjs;
    }

    # --- Прямо задаём TLS-настройки (без внешних include)
    ssl_certificate     /etc/letsencrypt/live/test.dent-s.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/test.dent-s.com/privkey.pem;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;

    # Современный набор шифров; без DH-параметров (ECDHE достаточно)
    ssl_ciphers HIGH:!aNULL:!MD5:!RC4:!DES:!3DES;

    # Заголовки безопасности
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;
    add_header Referrer-Policy strict-origin-when-cross-origin always;
    # HSTS включишь после проверки
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Общие proxy-настройки
    proxy_http_version 1.1;
    proxy_set_header Host              $host;
    proxy_set_header X-Real-IP         $remote_addr;
    proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header Upgrade           $http_upgrade;
    proxy_set_header Connection        $connection_upgrade;

    proxy_connect_timeout 60s;
    proxy_send_timeout    300s;
    proxy_read_timeout    300s;
    send_timeout          300s;

    # -------- Stripe webhook
    location /api/stripe/webhook/ {
        proxy_pass http://backend/api/stripe/webhook/;
        access_log  /var/log/nginx/stripe_webhook.log;
        error_log   /var/log/nginx/stripe_webhook.error.log;
    }

    # -------- API
    location /api/ {
        proxy_pass http://backend/api/;
    }

    # -------- Adminer
    location /adminer/ {
        proxy_pass http://adminer/;
    }

    # -------- Docs / OpenAPI / Redoc
    location /openapi.json { proxy_pass http://backend/openapi.json; }
    location /redoc        { proxy_pass http://backend/redoc; }
    location /docs         { proxy_pass http://backend; }

    # -------- Предпросмотр картинок с хоста
    location /assets/img/preview_img/ {
        alias /assets/img/preview_img/;
        autoindex on;
        expires 1h;
    }

    # -------- SPA (фронтенд)
    location / {
        proxy_pass http://frontend;
    }

    # (опц.) кэш статических расширений
    location ~* \.(?:js|mjs|css|svg|png|jpe?g|webp|gif|ico|woff2?)$ {
        proxy_pass http://frontend;
        expires 7d;
        add_header Cache-Control "public, max-age=604800, immutable";
    }
}
# ========================================================================
