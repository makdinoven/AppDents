name: Deploy to Production

on:
  push:
    branches: [ "main" ]

jobs:
  # 1) Определяем, какие сервисы затронуты изменениями
  check-changes:
    runs-on: ubuntu-latest

    # Список изменённых сервисов передадим как output этого job
    outputs:
      changed_services: ${{ steps.prepare.outputs.changed_services }}

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Detect changed folders
        id: changes
        uses: dorny/paths-filter@v2
        with:
          # Настраиваем фильтры, указывая пути для каждого сервиса
          filters: |
            backend:
              - 'backend/**'
            frontend:
              - 'frontend/**'
            nginx:
              - 'nginx/**'

      - name: Prepare changed_services output
        id: prepare
        run: |
          SERVICES=""
          if [ "${{ steps.changes.outputs.backend }}" = "true" ]; then
            SERVICES="$SERVICES backend"
          fi
          if [ "${{ steps.changes.outputs.frontend }}" = "true" ]; then
            SERVICES="$SERVICES frontend"
          fi
          if [ "${{ steps.changes.outputs.nginx }}" = "true" ]; then
            SERVICES="$SERVICES nginx"
          fi
          # Записываем результат в GITHUB_OUTPUT,
          # чтобы передать в другой job.
          echo "changed_services=$SERVICES" >> $GITHUB_OUTPUT


  # 2) Деплой на сервер с выборочной сборкой
  deploy:
    runs-on: ubuntu-latest
    needs: [ check-changes ]

    steps:
      - uses: actions/checkout@v3

      - name: SSH Deploy
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.TW_SERVER_HOST }}       # без новых секретов
          username: ${{ secrets.TW_SERVER_USER }}
          key: ${{ secrets.TW_SERVER_SSH_KEY }}
          port: 22
          skip_host_key_check: true
          ssh_args: "-4 -vvv -o PreferredAuthentications=publickey -o PubkeyAuthentication=yes"
          script_stop: true
          script: |
            set -Eeuo pipefail

            echo "[preflight] whoami: $(whoami)"
            echo "[preflight] ip -4 addr:"
            ip -4 addr || true
            which git || true
            which docker || true
            docker --version || true
            docker compose version || true

            cd /var/www/AppDents
            export COMPOSE_PROJECT_NAME=appdents

            git pull --no-rebase -s recursive -X theirs origin main

            CHANGED_SERVICES="${{ needs.check-changes.outputs.changed_services }}"
            if [ -n "$CHANGED_SERVICES" ]; then
              echo "Есть изменения в: $CHANGED_SERVICES"
              sudo docker compose build $CHANGED_SERVICES nginx
            else
              echo "Нет изменений в сервисах — пересобираем только nginx"
              sudo docker compose build nginx
            fi

            sudo docker compose up -d

            # мягкая перезагрузка, если не выйдет — рестарт контейнера
            sudo docker compose exec nginx nginx -s reload || sudo docker compose restart nginx

            sudo docker builder prune -f
