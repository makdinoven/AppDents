# docker-compose.dev.yml

version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: backend_dev
    restart: always
    env_file:
      - ./backend/.env
    volumes:
      - ./backend/app:/app/app  # Монтирование кода для автоматической перезагрузки
      - /app/venv
    expose:
      - "8000"
    depends_on:
      - db

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: frontend_dev
    restart: always
    volumes:
      - ./frontend/src:/app/src  # Монтирование кода для автоматической перезагрузки
      - ./frontend/public:/app/public
      - /app/node_modules  # Изоляция node_modules внутри контейнера
    expose:
      - "3000"
    environment:
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - backend

  nginx:
    image: nginx:alpine
    container_name: nginx_dev
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend

  db:
    image: mysql:8.0
    container_name: db_dev
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: mydatabase
      MYSQL_USER: myuser
      MYSQL_PASSWORD: mypassword
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "3306:3306"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin_dev
    restart: always
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "8080:80"
    depends_on:
      - db

volumes:
  db_data:
