services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: backend_dev
    restart: always
    volumes:
      - ./backend/app:/app/app  # Монтирование кода для автоматической перезагрузки
      - /app/venv
    env_file:
        - .env.dev
    expose:
      - "8000"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - dev

  frontend:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile.dev
    volumes:
      - ./frontend:/frontend
    working_dir: /frontend
    command: sh -c "npm install --legacy-peer-deps && npm run dev"
    ports:
      - "5173:5173"
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - dev

  nginx:
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    volumes:
        - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
        - "80:80"
    depends_on:
        - frontend
        - backend
    networks:
      - dev

  mysql:
    build:
      context: .
      dockerfile: ./mysql/Dockerfile
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: mydatabase
      MYSQL_USER: myuser
      MYSQL_PASSWORD: mypassword
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - '3306:3306'
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 20s
    networks:
      - dev

  adminer:
    image: adminer
    container_name: adminer
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - dev

networks:
  dev:
    driver: bridge
volumes:
  mysql_data:
